#!/bin/zsh
function gs() { git status }
function gcbn() { git rev-parse --abbrev-ref HEAD }
function gl(){ git log --show-notes }
function glt(){ git log --graph --oneline --all }
function gltp(){ git log --graph --all --decorate }
function gd(){ git diff }
function gtl(){ git tag -l }
function grso(){ git remote show origin }
function gcf(){ git config --list }

function gpurgetags(){
	num=0
	for t in `git tag`
	do
		if [ "$num" -ge 120 ]
			then
				break
		fi
		git push origin :$t
		git tag -d $t
		num=`expr $num + 1`
		echo "Removed $t"
	done
	git tag -l;
}
function ggoback() {
	msg "Resetting all local changes"
	git reset --hard;
	git clean -f -d;
	git status;
}
function gcb() {
	git pull;
	git checkout -b "$1";
	msg "Creating branch: $1"
	git push -u origin "$1";
	git push --set-upstream origin "$1";
	msg "Pending changes?";
	gs;
}
function gcbd() {
	git pull;
	git checkout -b "$1" develop;
	msg "Creating branch: $1"
	git push -u origin "$1";
	git push --set-upstream origin "$1";
	msg "Pending changes?";
	gs;
}
function gmt() {
	git pull;
	msg "Merging branch: $1 with a full overwrite of the current branch: ${$(gcbn)}"
	git merge "$1" -X theirs;
	git push;
	git status;
}
function gmb() {
	git fetch --all;
	git pull;
	msg "Merging branch: $1"
	git merge "$1" --no-ff;
	git push;
	git status;
}
function gc() {
	git add . -A;
	msg "Committing to branch: ${$(gcbn)}" "Message: $1";
	git commit -m "$1";
	gs;
}
function gcm() {
	git add . -A;
	git commit;
	gs;
}
function gp() {
	msg "Pull down all the code and all the tags!";
  git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| && not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs
	git fetch --all;
	git pull --all;
	git pull --tags;
	gs;
}
function gci() {
  msg "Triggering CI Manual Update!";
  git commit --allow-empty -m "Trigger CI build"
  msg "Pushing all the things to origin!";
	git push;
	gs;
}

function gpo() {
	msg "Pushing all the things to origin!";
	git push;
	gs;
}
function gph() {
 msg "Pushing current branch: ${$(gcbn)} to heroku!"
 git push heroku master;
 gs;
}
function grpo() {
	msg "Purge dead branches!";
	git pull;
	git remote prune origin;
	git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d;
}
function gct() {
	msg "Creating tag: $1"
	git tag "$1";
	git push origin --tags;11
	msg "Current tags!";
	git tag -l;
	gs;
}
function gdt() {
	msg "Deleting tag: $1"
	git tag -d "$1";
	git push origin :refs/tags/"$1";
}
function grt() {
	msg "Deleting tag: $1"
	git tag -d "$1";
	git push origin :refs/tags/"$1";
	msg "Creating tag: $1"
	git tag "$1";
	git push origin --tags;
	msg "Current tags!";
	git tag -l;
	gs;
}
function gck() {
	msg "Checking out branch: $1"
	git checkout "$1";
	git pull;
	gs;
}
function gdb() {
	msg "Deleting branch: $1"
	git branch -D "$1";
	git push --delete origin "$1";
	git remote prune origin
	gs;
}
function gk() {
	touch .keep
}
function gkf() {
	mkdir "$1";
	touch "$1/.keep";
}
function gcmd() {
	touch readme.md;
	open readme.md;
}
